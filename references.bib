@article{leino2008boogie,
author = {Leino, Rustan},
title = {This is Boogie 2},
booktitle = {},
year = {2008},
month = {June},
abstract = {Boogie is an intermediate verification language, designed
                  to make the prescription of verification conditions
                  natural and convenient. It serves as a common
                  intermediate representation for static program
                  verifiers of various source languages, and it
                  abstracts over the interfaces to various theorem
                  provers. Boogie can also be used as a shared input
                  and output format for techniques like abstract
                  interpretation and predicate abstraction. As a
                  language, Boogie has both mathematical and
                  imperative components. The imperative components of
                  Boogie specify sets of execution traces, the states
                  of which are described and constrained by the
                  mathematical components. The language includes
                  features like parametric polymorphism, partial
                  orders, logical quantifications, nondeterminism,
                  total expressions, partial statements, and flexible
                  control flow. The Boogie language was previously
                  known as BoogiePL. This paper is a reference manual
                  for Boogie version 2.},
publisher = {Microsoft Research},
url = {https://www.microsoft.com/en-us/research/publication/this-is-boogie-2-2/},
address = {},
pages = {},
journal={Manuscript KRML},
volume = {},
chapter = {},
isbn = {},
}
@incollection{floyd1993assigning,
  title={Assigning meanings to programs},
  author={Floyd, Robert W},
  booktitle={Program Verification},
  pages={65--81},
  year={1993},
  publisher={Springer}
}
@inproceedings{puasuareanu2004verification,
  title={Verification of Java programs using symbolic execution and invariant generation},
  author={P{\u{a}}s{\u{a}}reanu, Corina S and Visser, Willem},
  booktitle={International SPIN Workshop on Model Checking of Software},
  pages={164--181},
  year={2004},
  organization={Springer}
}
@article{sankaranarayanan2004non,
  title={Non-linear loop invariant generation using Gr{\"o}bner bases},
  author={Sankaranarayanan, Sriram and Sipma, Henny B and Manna, Zohar},
  journal={ACM SIGPLAN Notices},
  volume={39},
  number={1},
  pages={318--329},
  year={2004},
  publisher={ACM}
}

@misc{wiki:invariant,
    author = "Wikipedia",
    title = "Invariant (computer science) --- Wikipedia{,} The Free Encyclopedia",
    year = "2017",
    url = "https://en.wikipedia.org/w/index.php?title=Invariant_(computer_science)&oldid=792659223",
    note = "[Online; accessed 
18-October-2017
]"
}
@article{cytron1991efficiently,
  title={Efficiently computing static single assignment form and the
                  control dependence graph},
  author={Cytron, Ron and Ferrante, Jeanne and Rosen, Barry K and
                  Wegman, Mark N and Zadeck, F Kenneth},
  journal={ACM Transactions on Programming Languages and Systems
                  (TOPLAS)},
  volume={13},
  number={4},
  pages={451--490},
  year={1991},
  publisher={ACM}
}
@inproceedings{sualcianu2005purity,
  title={Purity and Side Effect Analysis for Java Programs.},
  author={Salcianu, Alexandru and Rinard, Martin C},
  booktitle={Verification, Model Checking, and Abstract Interpretation},
  volume={5},
  pages={199--215},
  year={2005},
  organization={Springer}
}
@article{hoare1969,
  title={An axiomatic basis for computer programming},
  author={Hoare, Charles Antony Richard},
  journal={Communications of the ACM},
  volume={12},
  number={10},
  pages={576--580},
  year={1969},
  publisher={ACM}
}
@article{flanagan2001avoiding,
  title={Avoiding exponential explosion: Generating compact
                  verification conditions},
  author={Flanagan, Cormac and Saxe, James B},
  journal={ACM SIGPLAN Notices},
  volume={36},
  number={3},
  pages={193--205},
  year={2001},
  publisher={ACM}
}
@article{sondergaard1990referential,
  title={Referential transparency, definiteness and unfoldability},
  author={S{\o}ndergaard, Harald and Sestoft, Peter},
  journal={Acta Informatica},
  volume={27},
  number={6},
  pages={505--517},
  year={1990},
  publisher={Springer}
}
@inproceedings{barnett200499,
  title={99.44\% pure: Useful abstractions in specifications},
  author={Barnett, Mike and Naumann, David A and Schulte, Wolfram and
                  Sun, Qi},
  booktitle={ECOOP workshop on Formal Techniques for Java-like
                  Programs (FTfJP)},
  year={2004}
}
@article{naumann2007observational,
  title={Observational purity and encapsulation},
  author={Naumann, David A},
  journal={Theoretical Computer Science},
  volume={376},
  number={3},
  pages={205--224},
  year={2007},
  publisher={Elsevier}
}
@article{barnett2006allowing,
  title={Allowing state changes in specifications},
  author={Barnett, Michael and Naumann, David A and Schulte, Wolfram
                  and Sun, Qi},
  journal={Emerging tredns in informatin and communication security},
  volume={3995},
  pages={321--336},
  year={2006},
  publisher={Springer}
}
@inproceedings{cok2008extensions,
  title={Extensions of the theory of observational purity and a
                  practical design for JML},
  author={Cok, David R and Leavens, Gary T},
  booktitle={Seventh International Workshop on Specification and
                  Verification of Component-Based Systems (SAVCBS
                  2008). Number CS-TR-08-07 in Technical
                  Report. School of EECS, UCF},
  volume={4000},
  pages={32816--2362},
  year={2008}
}
@inproceedings{finifter2008verifiable,
  title={Verifiable functional purity in java},
  author={Finifter, Matthew and Mettler, Adrian and Sastry, Naveen and
                  Wagner, David},
 booktitle={Proceedings of the 15th ACM conference on Computer and
                  communications security},
  pages={161--174},
  year={2008},
  organization={ACM}
}
@inproceedings{alpern1988detecting,
  title={Detecting equality of variables in programs},
  author={Alpern, Bowen and Wegman, Mark N and Zadeck, F Kenneth},
  booktitle={Proceedings of the 15th ACM SIGPLAN-SIGACT symposium on
                  Principles of programming languages},
  pages={1--11},
  year={1988},
  organization={ACM}
}
@inproceedings{partush2013abstract,
  title={Abstract semantic differencing for numerical programs},
  author={Partush, Nimrod and Yahav, Eran},
  booktitle={International Static Analysis Symposium},
  pages={238--258},
  year={2013},
  organization={Springer}
}
@article{ de2008z3,
  title={Z3: An efficient SMT solver},
  author={De Moura, Leonardo and Bj{\o}rner, Nikolaj},
  journal={Tools and Algorithms for the Construction and Analysis of Systems},
  pages={337--340},
  year={2008},
  publisher={Springer}
}
@inproceedings{lahiri2013differential,
  title={Differential assertion checking},
  author={Lahiri, Shuvendu K and McMillan, Kenneth L and Sharma, Rahul and Hawblitzel, Chris},
  booktitle={Proceedings of the 2013 9th Joint Meeting on Foundations of Software Engineering},
  pages={345--355},
  year={2013},
  organization={ACM}
}
@article{kurshan1994computer,
  title={Computer-aided verification of coordinating processes.},
  author={Kurshan, Robert-P},
  year={1994},
  publisher={Princeton University Press}
}
@inproceedings{mcmillan2004interpolating,
  title={An interpolating theorem prover},
  author={McMillan, Kenneth L},
  booktitle={TACAS},
  volume={4},
  pages={16--30},
  year={2004},
  organization={Springer}
}
@inproceedings{barnett2004spec,
  title={The Spec\# programming system: An overview},
  author={Barnett, Mike and Leino, K Rustan M and Schulte, Wolfram},
  booktitle={International Workshop on Construction and Analysis of Safe, Secure, and Interoperable Smart Devices},
  pages={49--69},
  year={2004},
  organization={Springer}
}
